package me.lb.controller.admin.common;import javax.servlet.http.HttpSession;import me.lb.model.system.User;import me.lb.service.system.UserService;import me.lb.utils.MD5Util;import org.apache.commons.lang.StringUtils;import org.apache.shiro.SecurityUtils;import org.apache.shiro.authc.UsernamePasswordToken;import org.hibernate.cfg.Configuration;import org.hibernate.tool.hbm2ddl.SchemaExport;import org.springframework.beans.factory.BeanFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.support.ClassPathXmlApplicationContext;import org.springframework.orm.hibernate4.LocalSessionFactoryBean;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;@Controller@RequestMapping(value = "/admin/common")public class MainController {	@Autowired	private UserService userService;	@ResponseBody	@RequestMapping(value = "/login")	public String login(String loginName, String loginPass, HttpSession session) {		try {			// 后台验证，避免恶意操作			if (StringUtils.isEmpty(loginName)) {				return "{ \"success\" : false, \"msg\" : \"用户名不能为空！\" }";			}			if (StringUtils.isEmpty(loginPass)) {				return "{ \"success\" : false, \"msg\" : \"密码不能为空！\" }";			}			// 通过验证，设置Shiro登录信息			UsernamePasswordToken token = new UsernamePasswordToken();			token.setUsername(loginName);			// 使用自定义的MD5进行密码处理			String md5Pass = MD5Util.getValue(MD5Util.PREFIX + loginPass);			token.setPassword(md5Pass.toCharArray());			token.setRememberMe(true);			// 通过Shiro进行登录（使用Realm的doGetAuthenticationInfo方法）			SecurityUtils.getSubject().login(token);			// 如果失败会抛出异常			// 如果成功，则记录用户的信息			User u = userService.findByLoginName(loginName);			session.setAttribute("user", u);			return "{ \"success\" : true }";		} catch (Exception e) {			e.printStackTrace();			return "{ \"success\" : false, \"msg\" : \"用户名或密码错误！\" }";		}	}	@ResponseBody	@RequestMapping(value = "/logout")	public String logout(HttpSession session) {		try {			SecurityUtils.getSubject().logout();			return "{ \"success\" : true }";		} catch (Exception e) {			e.printStackTrace();			return "{ \"success\" : false }";		}	}	@ResponseBody	@RequestMapping(value = "/init")	public void init() {		BeanFactory factory = new ClassPathXmlApplicationContext(				"applicationContext-hibernate.xml");		LocalSessionFactoryBean sessionFactory = factory				.getBean(LocalSessionFactoryBean.class);		Configuration cfg = sessionFactory.getConfiguration();		SchemaExport se = new SchemaExport(cfg);		se.create(false, true);	}}